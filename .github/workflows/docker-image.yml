name: Grafana Demo

on:
  push:
    branches: [ develop, main ]
    tags: ['v*.*.*']

env:
  GCR_IMAGE: asia.gcr.io/evermed-devops-prod/devops/grafana-demo
  GIT_DEPLOY: its-knowledge-sharing/grafana-demo-deployment.git
  GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}
  GITHUB_TOKEN: ${{ secrets.EVER_PAT_GITHUB_TOKEN }}

jobs:

  build:    
    runs-on: ubuntu-latest
    container:
      image: gcr.io/its-artifact-commons/github-runner:develop-latest
    if: contains('refs/heads/develop|refs/heads/main|refs/tags/', github.ref)
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Build Application
      id: build-application
      run: |
        run-prepare.bash
        run-docker-push.bash ${GCR_IMAGE} $(pwd)
    
    #Transfer states between jobs
    - uses: actions/upload-artifact@v3
      with:
        name: state-key
        path: states.txt

  deploy:
    runs-on: ubuntu-latest
    container:
      image: gcr.io/its-artifact-commons/github-runner:develop-latest
    if: contains('refs/heads/develop|refs/heads/main', github.ref)
    needs: build
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: state-key

    - name: Deploy Application
      id: deploy-application
      run: |
        run-prepare.bash
        run-deployment.bash ${GIT_DEPLOY} AUTO DIRECT
