name: Grafana Loki SysLog

on:
  push:
    branches: [ develop, main ]
    tags: ['v*.*.*']

env:
  ENV_GCR_IMAGE: gcr.io/its-artifact-commons/grafana-demo
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:

  build-and-deploy:    
    runs-on: self-hosted #This repository need to be private, otherwise runner will not pick the job (security reason)

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Prepare
      id: prep
      run: |
        DOCKER_IMAGE=itssoftware/grafana-demo
        GCR_IMAGE=$ENV_GCR_IMAGE
        VERSION=latest
        GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")
        SERVICE_NAME=grafana-demo

        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        elif [[ $GITHUB_REF == refs/heads/* ]]; then
          BRANCH=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          VERSION=$BRANCH-$GIT_HASH        
        fi

        TAGS="${DOCKER_IMAGE}:${VERSION}"
        GCR_TAGS="${GCR_IMAGE}:${VERSION}"

        if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
          MINOR=${VERSION%.*}
          MAJOR=${MINOR%.*}
          TAGS="$TAGS,${DOCKER_IMAGE}:${MINOR},${DOCKER_IMAGE}:${MAJOR},${DOCKER_IMAGE}:latest"
        elif [ "${{ github.event_name }}" = "push" ]; then
          TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
        fi

        echo ::set-output name=tags::${TAGS}
        echo ::set-output name=gcr_tags::${GCR_TAGS}
        echo ::set-output name=version::${VERSION}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    
#    - name: Set up Docker Buildx
#      uses: docker/setup-buildx-action@v1

